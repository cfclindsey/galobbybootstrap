<?php

/**
 *  This module will handle creation of new UX for Client Watch Reporting including creation of landing pages, tables, new functionality,
 *	and PDF exports.
 *	New module as of May 2017.
 */

set_include_path(get_include_path() . PATH_SEPARATOR . "sites/all/libraries/dompdf");
set_include_path(get_include_path() . PATH_SEPARATOR . "sites/all/libraries/PHPMailer");

require_once 'dompdf_config.inc.php';
require_once 'sites/all/libraries/PHPMailer/PHPMailerAutoload.php';

//Create menu items and register with system
function galobby_cw_menu() {
  $items = array();

  $items['cw-landing'] = array( //this creates a URL that will call this page at "cw-landing"
    'title' => 'Client Watch Reports', //page title
    'description' => 'Landing page for Client Watch Reports',
    'page callback' => 'galobby_cw_bill_table_page',     
  	'access arguments' => array('access content'),
    'access callback' => TRUE
  );

	$items['cw-clients/%'] = array( //this creates a URL that will call this form at "cw-clients"
    'title' => 'Client Watch Reports by Client/Issue', //page title
    'description' => 'Client Watch Reports by Client/Issue',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('galobby_cw_ind_client_table_form', 1),   
  	'access arguments' => array('access content'),
    'access callback' => TRUE
  );

	$items['cw-clients/%/bill-sort'] = array( //this creates a URL that will call this form at "cw-clients"
    'title' => 'Client Watch Reports by Client/Issue', //page title
    'description' => 'Client Watch Reports by Client/Issue',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('galobby_cw_ind_client_table_form_sorted', 1),   
  	'access arguments' => array('access content'),
    'access callback' => TRUE
  );

	$items['cw-add-bill/%'] = array( //this creates a URL that will call this form at "cw-add-bill"
    'title' => 'Add Bill to Client/Issue', //page title
    'description' => 'Add Bill to by Client/Issue',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('galobby_cw_add_bill_form', 1),   
  	'access arguments' => array('access content'),
    'access callback' => TRUE
  );

  return $items;
}

//create CW landing page
function galobby_cw_bill_table_page() {
	global $user;
	$usobj = user_load($user->uid);
	$userid = $user->uid;
	//make sure user has permission to see Client Watch
	if (user_has_role(10, $usobj) || user_has_role(3, $usobj) || user_has_role(13, $usobj)) {
		//begin to build HTML for page starting with menu links and static content at top of page
		$menuhtml = '<div class="block block-menu contextual-links-region" id="block-menu-menu-left-menu-client-watch-la" style="display:none;">
<h2>Client Watch Quick Menu</h2></div>
<div class="content">
<ul class="menu">
	<li class="first leaf"><a href="/development/node/add/client-watch" title="">Quick Add Bill for Client Watch</a></li>
	<li class="leaf"><a href="/development/admin/structure/taxonomy/clients/add" title="">Add New Client or Issue</a></li>
	<li class="last leaf"><a href="/development/cw-team-edit">Client Watch Team Collaboration</a></li>
	<li class="last leaf"><a href="/development/user/' . $userid . '/edit" title="">Edit your Profile</a></li>
	<li class="last leaf"><a href="/development/user/logout" title="">Logout</a></li>
</ul>
</div></div></div>';
		
		//bill table html
		$billhtml = '<div id="cw-all-bills" class="view-id-client_watch_reporting"><h3>All Client Watch Bills</h3><table id="cw-bill-table" class="tablesorter"><thead><tr><th>Importance</th><th>Bill</th><th> Description</th><th>Summary</th><th>Sponsor</th><th>Committees</th><th>Status</th><th>Analysis</th><th>Client/Issue</th><th>Edit</th><th>Delete</th></tr></thead><tbody>';
		//let's load user's client watch bills...
		$query = new EntityFieldQuery();
		$entities = $query->entityCondition('entity_type', 'node')
					->propertyCondition('type', 'client_watch')
					->propertyCondition('uid', $userid)
					->execute();
		if (!empty($entities['node'])) {
  			$cwNodes = array_keys($entities['node']);
			$cwBills = entity_load('node', $cwNodes);
			foreach ($cwBills as $cw) {
				//dpm($cw);
				//get and assign all fields to a variable
				$title = $cw->title;
				preg_match('/(\d+)/', $title, $billNum3);
                $billtype3 = substr($title, 0, 2);
    			$billnumber3 = $billNum3[0];
				$baseurl3 = 'http://www.legis.ga.gov/legislation/en-US/Display/20172018/';
    			$url3 = $baseurl3 . $billtype3 . '/' . $billnumber3;
				$importance = $cw->field_importance[$cw->language][0]['value'];
				$descrip = $cw->field_billdescrip[$cw->language][0]['value'];
				$summary = $cw->field_descrip[$cw->language][0]['value'];
				$sponsor = $cw->field_sponsor[$cw->language][0]['value'];
				$committee = $cw->field_committee[$cw->language][0]['safe_value'];
				$status = $cw->field_status[$cw->language][0]['value'];
				$analysis = $cw->body[$cw->language][0]['safe_value'];
				$cterms = '';
				$c = 0;
				$terms = array();
				//get terms to prepare for report links
				foreach ($cw->field_clients[$cw->language] as $t) {
					$userTerms[] = $t['tid'];
					$term = entity_load_single('taxonomy_term', $t['tid']);
					$terms[] = $term->name;
					$c++;
				}
				foreach ($terms as $ter) {
					$cterms .= $ter;
					if ($c - 1 > 0) {
						$cterms .= ', ';
					}
					$c--;
				}
				$c = 0;
				//build bill HTML lines
				$billhtml .= '<tr><td class="views-field-field-importance">' . $importance . '</td><td><a href="' . $url3 . '">' . $cw->title . '</a></td><td>' . $descrip . '</td><td class="views-field-field-descrip">' . $summary . '</td><td>' . $sponsor . '</td><td>' . $committee . '</td><td>' . $status . '</td><td>' . $analysis . '</td><td>' . $cterms . '</td><td><a href="/development/node/' . $cw->nid . '/edit">Edit</a></td><td><a href="/development/node/' . $cw->nid . '/delete">Delete</a></td></tr>';
			}
		}
		//remove dups in terms array
		$userTerms = array_unique($userTerms);
		//start listings html
		$termslistinghtml = '<div id="reports-by-term"><h3>Client Watch Reports by Client/Issue</h3><ul>';
		//load each term to get the name and set up for the correct URL
		foreach ($userTerms as $te) {
			$query = new EntityFieldQuery();
			$entities = $query->entityCondition('entity_type', 'taxonomy_term')
					->entityCondition('bundle', array('clients'))
					->propertyCondition('tid', $te)
					->execute();
			if (!empty($entities['taxonomy_term'])) {
  				$cwTerms = array_keys($entities['taxonomy_term']);
				$cwClients = entity_load('taxonomy_term', $cwTerms);
				foreach ($cwClients as $cli) {
					$termslistinghtml .=  '<li><a href="/development/cw-clients/' . $cli->name .'">' . $cli->name . '</a></li>';
				}
			}
		}
		unset($userTerms);
		
		//concat html into singular html item to return.
		$html = $menuhtml . $termslistinghtml . '</ul></div>' . $billhtml . '</tbody></table></div>';
	}
	else {
		//no permissions message
		$html = 'You are not subscribed to Client Watch services.  Please contact Georgia Lobby if you feel this is an error or to upgrade your contract to include this valuable service!';
	}
	return $html;
}

//create CW individual term page
function galobby_cw_ind_client_table_form($form, &$form_state, $argument) {
	//dpm($argument);
	global $user;
	$usobj = user_load($user->uid);
	$userid = $user->uid;
	$client = $form_state['build_info']['args'][0];
	//make sure user has permission to see Client Watch
	if (user_has_role(10, $usobj) || user_has_role(3, $usobj) || user_has_role(13, $usobj)) {
		$n = 0; 
  
		$cl_term = taxonomy_get_term_by_name($client, 'clients');
		foreach($cl_term as $cl_t) {
			$cl_tid = $cl_t->tid;
		}
		
		//begin to build HTML for page starting with menu links and static content at top of page
		//to-do: what's Normer talking about re: Bill Watch linkage? when I know this, I can code it
		$menuhtml = '<div class="block block-menu contextual-links-region" id="block-menu-menu-left-menu-client-watch-la" style="display:none;">
<h2>Client Watch Quick Menu</h2></div>
<div class="content">
<ul class="menu">
	<li class="first leaf"><a href="/development/node/add/client-watch" title="">Quick Add Bill for all Client Watch</a></li>
	<li class="first leaf"><a href="/development/cw-add-bill/' . $client . '" title="">Add Bill for this Client/Issue</a></li>
	<li class="first leaf"><a href="/development/cw-landing" title="">Return to all Bills View</a></li>
	<li class="leaf"><a href="/development/admin/structure/taxonomy/clients/add" title="">Add New Client or Issue</a></li>
	<li class="last leaf"><a href="/development/cw-team-edit">Client Watch Team Collaboration</a></li>
	<li class="last leaf"><a href="/development/user/' . $userid . '/edit" title="">Edit your Profile</a></li>
	<li class="last leaf"><a href="/development/user/logout" title="">Logout</a></li>
</ul>
</div></div></div>';
		
		//bill table html
		$billhtml = '<div id="cw-all-bills" class="view-id-client_watch_reporting"><h3>Client Watch Bills for ' . $client . '</h3><table id="cw-bill-table1"><thead><tr><th>Show on Report</th><th><a href="/development/cw-clients/' . $client . '">Importance</a></th><th><a href="/development/cw-clients/' . $client . '/bill-sort">Bill</a></th><th> Description</th><th>Summary</th><th>Sponsor</th><th>Committees</th><th>Status</th><th>Analysis</th><th>Edit</th><th>Delete</th></tr></thead><tbody>';
		
		$formtophtml = $menuhtml . $billhtml;
		
		$form['top_menu'] = array(
  			'#markup' => $formtophtml,
		);
		
		//let's load user's client watch bills that contain the client/issue selected
		$query = new EntityFieldQuery();
		$entities = $query->entityCondition('entity_type', 'node')
					->propertyCondition('type', 'client_watch')
					->propertyCondition('uid', $userid)
					->fieldCondition('field_clients', 'tid', $cl_tid, '=') 
					->fieldOrderBy('field_importance', 'value', 'ASC')
					->execute();
		if (!empty($entities['node'])) {
  			$cwNodes = array_keys($entities['node']);
			$cwBills = entity_load('node', $cwNodes);
			foreach ($cwBills as $cw) {
				//get and assign all fields to a variable
				$title = $cw->title;
				$passthrunodes[] = $cw->nid;
				preg_match('/(\d+)/', $title, $billNum3);
                $billtype3 = substr($title, 0, 2);
    			$billnumber3 = $billNum3[0];
				$baseurl3 = 'http://www.legis.ga.gov/legislation/en-US/Display/20172018/';
    			$url3 = $baseurl3 . $billtype3 . '/' . $billnumber3;
				$importance = $cw->field_importance[$cw->language][0]['value'];
				$descrip = $cw->field_billdescrip[$cw->language][0]['safe_value'];
				//need to clean non-standard character from short bill description
				$cleanedbill = substr($descrip, 3, 2);
				$cleaneddescrip = substr($cw->field_billdescrip[$cw->language][0]['safe_value'], 5);
				$descrip = $cleanedbill . $cleaneddescrip;
				$summary = $cw->field_descrip[$cw->language][0]['value'];
				$sponsor = $cw->field_sponsor[$cw->language][0]['value'];
				$committee = $cw->field_committee[$cw->language][0]['safe_value'];
				$status = $cw->field_status[$cw->language][0]['value'];
				$analysis = $cw->body[$cw->language][0]['safe_value'];
				
				//build bill HTML lines
					$form['pdf_exp_' . $n] = array(
						'#prefix' => '<tr><td>',
	 					'#type' => 'checkbox',
  						'#options' => $form['type_options']['#value'],
						'#attributes' => array($cw->nid),
  						'#required' => FALSE, 
						'#default_value' => TRUE,
						//'#value' => TRUE,
						'#checked' => TRUE,
						'#suffix' => '</td><td class="views-field-field-importance">' . $importance . '</td><td><a href="' . $url3 . '">' . $cw->title . '</a></td><td>' . $descrip . '</td><td class="views-field-field-descrip">' . $summary . '</td><td>' . $sponsor . '</td><td>' . $committee . '</td><td>' . $status . '</td><td>' . $analysis . '</td><td><a href="/development/node/' . $cw->nid . '/edit">Edit</a></td><td><a href="/development/node/' . $cw->nid . '/delete">Delete</a></td></tr>',
					);
					$forpdf .= '</td><td class="views-field-field-importance">' . $importance . '</td><td><a href="' . $url3 . '">' . $cw->title . '</a></td><td>' . $descrip . '</td><td class="views-field-field-descrip">' . $summary . '</td><td>' . $sponsor . '</td><td>' . $committee . '</td><td>' . $status . '</td><td>' . $analysis . '</td></tr>';
				
				$form['pass_thru_nids'][$n] = array(
					'#type' => 'text',
					'#default_value' => $cw->nid,
				);
				//increment to count rows results
				$n++;
			
			}
			$form['count'] = array(
				'#type' => 'text',
				'#default_value' => $n,
			);
		}
		
		//concat html into singular html item to return.
		$html = $menuhtml . $termslistinghtml . '</ul></div>' . $billhtml . '</tbody></table></div>';
		$billhtmlforpdf .=  '</ul></div>' . $forpdf . '</tbody></table></div>';
		
		$form['htmlforpdf'] = array(
			'#type' => 'text',
			'#default_value' => $billhtmlforpdf,
		);
	}
	else {
		//no permissions message
		$html = 'You are not subscribed to Client Watch services.  Please contact Georgia Lobby if you feel this is an error or to upgrade your contract to include this valuable service!';
		
		return $html;
	}
	
	$form['post_table'] = array(
  		'#markup' => '</tbody></table></div>',
	);
	
	$form['export_type'] = array(
  		'#type' => 'radios',
		'#prefix' => 'Select the type of report you would like to generate:',
		'#options' => array(
			0 => t('Export to PDF'), 1 => t('Export to Excel'), 2 => t('Email Link to PDF Report'), 3 => t('Print Ready PDF')
			),
		'#default_value' => 0,
	);
	
	$form['export_button'] = array(
   		'#type' => 'submit',
   		'#value' => t('Export report'),
  	);
	//dpm('before submit');
	//dpm($form);
	return $form;
}

//create CW individual term page
function galobby_cw_ind_client_table_form_sorted($form, &$form_state, $argument) {
	//dpm($argument);
	//$html = 'This is a sort page';
	//dpm($html);
	global $user;
	$usobj = user_load($user->uid);
	$userid = $user->uid;
	$client = $form_state['build_info']['args'][0];
	//make sure user has permission to see Client Watch
	if (user_has_role(10, $usobj) || user_has_role(3, $usobj) || user_has_role(13, $usobj)) {
		$n = 0; 
  
		$cl_term = taxonomy_get_term_by_name($client, 'clients');
		foreach($cl_term as $cl_t) {
			$cl_tid = $cl_t->tid;
		}
		
		//begin to build HTML for page starting with menu links and static content at top of page
		//to-do: what's Normer talking about re: Bill Watch linkage? when I know this, I can code it
		$menuhtml = '<div class="block block-menu contextual-links-region" id="block-menu-menu-left-menu-client-watch-la" style="display:none;">
<h2>Client Watch Quick Menu</h2></div>
<div class="content">
<ul class="menu">
	<li class="first leaf"><a href="/development/node/add/client-watch" title="">Quick Add Bill for all Client Watch</a></li>
	<li class="first leaf"><a href="/development/cw-add-bill/' . $client . '" title="">Add Bill for this Client/Issue</a></li>
	<li class="first leaf"><a href="/development/cw-landing" title="">Return to all Bills View</a></li>
	<li class="leaf"><a href="/development/admin/structure/taxonomy/clients/add" title="">Add New Client or Issue</a></li>
	<li class="last leaf"><a href="/development/cw-team-edit">Client Watch Team Collaboration</a></li>
	<li class="last leaf"><a href="/development/user/' . $userid . '/edit" title="">Edit your Profile</a></li>
	<li class="last leaf"><a href="/development/user/logout" title="">Logout</a></li>
</ul>
</div></div></div>';
		
		//bill table html
		$billhtml = '<div id="cw-all-bills" class="view-id-client_watch_reporting"><h3>Client Watch Bills for ' . $client . '</h3><table id="cw-bill-table1"><thead><tr><th>Show on Report</th><th><a href="/development/cw-clients/' . $client . '">Importance</a></th><th><a href="/development/cw-clients/' . $client . '/bill-sort">Bill</a></th><th> Description</th><th>Summary</th><th>Sponsor</th><th>Committees</th><th>Status</th><th>Analysis</th><th>Edit</th><th>Delete</th></tr></thead><tbody>';
		
		$formtophtml = $menuhtml . $billhtml;
		
		$form['top_menu'] = array(
  			'#markup' => $formtophtml,
		);
		
		//let's load user's client watch bills that contain the client/issue selected
		$query = new EntityFieldQuery();
		$entities = $query->entityCondition('entity_type', 'node')
					->propertyCondition('type', 'client_watch')
					->propertyCondition('uid', $userid)
					->fieldCondition('field_clients', 'tid', $cl_tid, '=') 
					->propertyOrderBy('title', 'ASC')
					->execute();
		if (!empty($entities['node'])) {
  			$cwNodes = array_keys($entities['node']);
			$cwBills = entity_load('node', $cwNodes);
			foreach ($cwBills as $cw) {
				//get and assign all fields to a variable
				$title = $cw->title;
				$passthrunodes[] = $cw->nid;
				preg_match('/(\d+)/', $title, $billNum3);
                $billtype3 = substr($title, 0, 2);
    			$billnumber3 = $billNum3[0];
				$baseurl3 = 'http://www.legis.ga.gov/legislation/en-US/Display/20172018/';
    			$url3 = $baseurl3 . $billtype3 . '/' . $billnumber3;
				$importance = $cw->field_importance[$cw->language][0]['value'];
				$descrip = $cw->field_billdescrip[$cw->language][0]['safe_value'];
				//need to clean non-standard character from short bill description
				$cleanedbill = substr($descrip, 3, 2);
				$cleaneddescrip = substr($cw->field_billdescrip[$cw->language][0]['safe_value'], 5);
				$descrip = $cleanedbill . $cleaneddescrip;
				$summary = $cw->field_descrip[$cw->language][0]['value'];
				$sponsor = $cw->field_sponsor[$cw->language][0]['value'];
				$committee = $cw->field_committee[$cw->language][0]['safe_value'];
				$status = $cw->field_status[$cw->language][0]['value'];
				$analysis = $cw->body[$cw->language][0]['safe_value'];
				
				//build bill HTML lines
					$form['pdf_exp_' . $n] = array(
						'#prefix' => '<tr><td>',
	 					'#type' => 'checkbox',
  						'#options' => $form['type_options']['#value'],
						'#attributes' => array($cw->nid),
  						'#required' => FALSE, 
						'#default_value' => TRUE,
						//'#value' => TRUE,
						'#checked' => TRUE,
						'#suffix' => '</td><td class="views-field-field-importance">' . $importance . '</td><td><a href="' . $url3 . '">' . $cw->title . '</a></td><td>' . $descrip . '</td><td class="views-field-field-descrip">' . $summary . '</td><td>' . $sponsor . '</td><td>' . $committee . '</td><td>' . $status . '</td><td>' . $analysis . '</td><td><a href="/development/node/' . $cw->nid . '/edit">Edit</a></td><td><a href="/development/node/' . $cw->nid . '/delete">Delete</a></td></tr>',
					);
					$forpdf .= '</td><td class="views-field-field-importance">' . $importance . '</td><td><a href="' . $url3 . '">' . $cw->title . '</a></td><td>' . $descrip . '</td><td class="views-field-field-descrip">' . $summary . '</td><td>' . $sponsor . '</td><td>' . $committee . '</td><td>' . $status . '</td><td>' . $analysis . '</td></tr>';
				
				$form['pass_thru_nids'][$n] = array(
					'#type' => 'text',
					'#default_value' => $cw->nid,
				);
				//increment to count rows results
				$n++;
			
			}
			$form['count'] = array(
				'#type' => 'text',
				'#default_value' => $n,
			);
		}
		
		//concat html into singular html item to return.
		$html = $menuhtml . $termslistinghtml . '</ul></div>' . $billhtml . '</tbody></table></div>';
		$billhtmlforpdf .=  '</ul></div>' . $forpdf . '</tbody></table></div>';
		
		$form['htmlforpdf'] = array(
			'#type' => 'text',
			'#default_value' => $billhtmlforpdf,
		);
	}
	else {
		//no permissions message
		$html = 'You are not subscribed to Client Watch services.  Please contact Georgia Lobby if you feel this is an error or to upgrade your contract to include this valuable service!';
		
		return $html;
	}
	
	$form['post_table'] = array(
  		'#markup' => '</tbody></table></div>',
	);
	
	$form['export_type'] = array(
  		'#type' => 'radios',
		'#prefix' => 'Select the type of report you would like to generate:',
		'#options' => array(
			0 => t('Export to PDF'), 1 => t('Export to Excel'), 2 => t('Email Link to PDF Report'), 3 => t('Print Ready PDF')
			),
		'#default_value' => 0,
	);
	
	$form['export_button'] = array(
   		'#type' => 'submit',
   		'#value' => t('Export report'),
  	);
	//dpm('before submit');
	//dpm($form);
	return $form;
}



function galobby_cw_ind_client_table_form_submit($form, &$form_state) {
	//export to all options based on submit used
	//dpm('before exported, form states:');
	//dpm($form);
	//dpm($form_state);
	$count = $form_state['complete form']['count']['#default_value'];
	//pdf creation and pdf ready print
	if ($form_state['values']['export_type'] == 0 || $form_state['values']['export_type'] == 3) {
		//let's load the user so we can brand the PDF if needed
		global $user;
		$usobj = user_load($user->uid);
		//set up html for pdf export
		$forpdf = '<head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><style>th, td {border-bottom: 1px solid black; margin: 0px; padding: 0px;} </style></head><body><div id="branding">';
		if ($usobj->field_image['und'][0] != NULL) {
			$img = $usobj->field_image['und'][0]['filename'];
			$url = 'http://new.galobby.com/development/sites/default/files/';
			$forpdf .= '<img src="' . $url . $img . '" />'; 
		}
		else {
			$forpdf .= '<img src="http://new.galobby.com/development/sites/all/themes/freedom/logo.png" />';
		}
		$forpdf .= '</div><h3>Client Watch Report for ' . $form_state['build_info']['args'][0] . '</h3><table id="cw-bill-table" class="tablesorter"><thead><tr><th></th><th>Importance</th><th>Bill</th><th> Description</th><th>Summary</th><th>Sponsor</th><th>Committees</th><th>Status</th><th>Analysis</th></tr></thead><tbody>';
		$i = 0;
		//create the PDF object
		$dompdf = new DOMPDF();
		
		//put nids for report based on "show on report" true/false and put them in html for pdf
		while ($count > $i) {
			//dpm($form_state['complete form']['pdf_exp_' . $i]);
			if ($form_state['complete form']['pdf_exp_' . $i]['#value'] == '1') {
				$sub = substr($form_state['complete form']['pdf_exp_' . $i]['#suffix'], 0, -121);
				$forpdf .= '<tr><td>' . $sub . '</td></tr>';
			}
			$i++;
		}
		$pdfhtml .= $forpdf . '</tbody></table></body>';
		$dompdf->set_paper('A4', 'landscape');
		
		//load html into PDF object
		$dompdf->load_html($pdfhtml);
		$dompdf->render();
		
		//save the PDF to the FTP folder
		$output = $dompdf->output();
		file_put_contents("sites/default/files/pdf-reports/" . $form_state['values']['form_build_id'] . ".pdf", $output);
		
		//redirect to the new PDF
		$form_state['redirect'] = 'http://new.galobby.com/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.pdf';
		//when user comes back to a Drupal page, let's give them the link
		$message = 'PDF export complete. Copy and paste the following link to share: <a href="http://new.galobby.com/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.pdf" />' . $form_state['values']['form_build_id'] . '</a>';
		drupal_set_message($message);
		//dpm('after PDF exported, form states:');
		//dpm($form);
		//dpm($form_state);
	}
	//csv creation
	elseif ($form_state['values']['export_type'] == 1){
		//dpm('CSV outout expected');
		// output headers so that the file is downloaded rather than displayed
		//if ($form_state['complete form']['pdf_exp_' . $i]['#value'] == '1') {
			header('Content-Type: text/csv; charset=utf-8');
			//header('Content-Disposition: attachment; filename=' . $form_state['values']['form_build_id'] . '.csv');
			//header('Content-Disposition: attachment; filename=test.csv');
		if (is_writable('/home/galobby/public_html/development/sites/default/files/pdf-reports/')) {
			$out = fopen('/home/galobby/public_html/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.csv', 'a+');
			$data = array('Importance', 'Bill', 'Description', 'Summary', 'Sponsor', 'Committees', 'Status', 'Analysis');
			fputcsv($out, $data);
			$a = 0;
			//dpm($form['pass_thru_nids'][$a]['#default_value']);
			//load nodes
			while ($count > $a) {
				if ($form_state['complete form']['pdf_exp_' . $a]['#value'] == '1') {
					$nodeid = $form['pdf_exp_' . $a]['#attributes'][0];
					$cwb = node_load($nodeid);
					//dpm($cwb);
					fputcsv($out, array($cwb->field_importance['und'][0]['value'], $cwb->title, strip_tags($cwb->field_billdescrip['und'][0]['value']), strip_tags($cwb->field_descrip['und'][0]['value']), strip_tags($cwb->field_sponsor['und'][0]['value']), strip_tags($cwb->field_committee['und'][0]['value']), strip_tags($cwb->field_status['und'][0]['value']), strip_tags($cwb->body['und'][0]['value'])));
				}	
				$a++;
			}

			fclose($out);
			header('Content-Disposition: attachment; filename="' . $form_state['values']['form_build_id'] . "'.csv'");
			$msg = 'Excel report <a href="http://new.galobby.com/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.csv" /> ' . $form_state['values']['form_build_id'] . '</a> created. Click link to download the report or share it by copying and pasting the link.';
			drupal_set_message($msg);
		}
	}
	else {
		dpm('In progress, check back later for this functionality...');
		
		//let's load the user so we can brand the PDF if needed
		global $user;
		$usobj = user_load($user->uid);
		//set up html for pdf export
		$forpdf = '<head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><style>th, td {border-bottom: 1px solid black; margin: 0px; padding: 0px;} </style></head><body><div id="branding">';
		if ($usobj->field_image['und'][0] != NULL) {
			$img = $usobj->field_image['und'][0]['filename'];
			$url = 'http://new.galobby.com/development/sites/default/files/';
			$forpdf .= '<img src="' . $url . $img . '" />'; 
		}
		else {
			$forpdf .= '<img src="http://new.galobby.com/development/sites/all/themes/freedom/logo.png" />';
		}
		$forpdf .= '</div><h3>Client Watch Report for ' . $form_state['build_info']['args'][0] . '</h3><table id="cw-bill-table" class="tablesorter"><thead><tr><th></th><th>Importance</th><th>Bill</th><th> Description</th><th>Summary</th><th>Sponsor</th><th>Committees</th><th>Status</th><th>Analysis</th></tr></thead><tbody>';
		$i = 0;
		//create the PDF object
		$dompdf = new DOMPDF();
		
		//put nids for report based on "show on report" true/false and put them in html for pdf
		while ($count > $i) {
			//dpm($form_state['complete form']['pdf_exp_' . $i]);
			if ($form_state['complete form']['pdf_exp_' . $i]['#value'] == '1') {
				$sub = substr($form_state['complete form']['pdf_exp_' . $i]['#suffix'], 0, -121);
				$forpdf .= '<tr><td>' . $sub . '</td></tr>';
			}
			$i++;
		}
		$pdfhtml .= $forpdf . '</tbody></table></body>';
		$dompdf->set_paper('A4', 'landscape');
		
		//load html into PDF object
		$dompdf->load_html($pdfhtml);
		$dompdf->render();
		
		//save the PDF to the FTP folder
		$output = $dompdf->output();
		file_put_contents("sites/default/files/pdf-reports/" . $form_state['values']['form_build_id'] . ".pdf", $output);
		
		//redirect to the new PDF
		$form_state['redirect'] = 'http://new.galobby.com/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.pdf';
		//when user comes back to a Drupal page, let's give them the link
		$message = 'PDF export complete. Copy and paste the following link to share: <a href="http://new.galobby.com/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.pdf" />' . $form_state['values']['form_build_id'] . '</a>';
		drupal_set_message($message);
		
		$mail = new PHPMailer;
		
		$mail->From = 'test@galobby.com';
		$mail->FromName = 'Testing PDF Email';
		
		$mail->addAddress("lindsey@countryfriedcreative.com", "Lindsey");
		$mail->addAttachment('"http://new.galobby.com/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.pdf"');
		
		$mail->isHTML(true);
		
		$mail->Subject = "Subject Text";
		$mail->Body = "<h3>This is a test of PHPMailer.</h3><br /><p>Test, 1, 2.</p>";
		$mail->AltBody = "This is the PHPMailer plain text version of the email content";
		
		if (!$mail->send()) {
			dpm("Mailer error: " . $mail->ErrorInfo);
		}
		else {
			dpm('Message sent!');
		}
	}
}

function galobby_cw_ind_client_table_form_sorted_submit($form, &$form_state) {
	//export to all options based on submit used
	//dpm('before exported, form states:');
	//dpm($form);
	//dpm($form_state);
	$count = $form_state['complete form']['count']['#default_value'];
	//pdf creation and pdf ready print
	if ($form_state['values']['export_type'] == 0 || $form_state['values']['export_type'] == 3) {
		//let's load the user so we can brand the PDF if needed
		global $user;
		$usobj = user_load($user->uid);
		//set up html for pdf export
		$forpdf = '<head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><style>th, td {border-bottom: 1px solid black; margin: 0px; padding: 0px;} </style></head><body><div id="branding">';
		if ($usobj->field_image['und'][0] != NULL) {
			$img = $usobj->field_image['und'][0]['filename'];
			$url = 'http://new.galobby.com/development/sites/default/files/';
			$forpdf .= '<img src="' . $url . $img . '" />'; 
		}
		else {
			$forpdf .= '<img src="http://new.galobby.com/development/sites/all/themes/freedom/logo.png" />';
		}
		$forpdf .= '</div><h3>Client Watch Report for ' . $form_state['build_info']['args'][0] . '</h3><table id="cw-bill-table" class="tablesorter"><thead><tr><th></th><th>Importance</th><th>Bill</th><th> Description</th><th>Summary</th><th>Sponsor</th><th>Committees</th><th>Status</th><th>Analysis</th></tr></thead><tbody>';
		$i = 0;
		//create the PDF object
		$dompdf = new DOMPDF();
		
		//put nids for report based on "show on report" true/false and put them in html for pdf
		while ($count > $i) {
			//dpm($form_state['complete form']['pdf_exp_' . $i]);
			if ($form_state['complete form']['pdf_exp_' . $i]['#value'] == '1') {
				$sub = substr($form_state['complete form']['pdf_exp_' . $i]['#suffix'], 0, -121);
				$forpdf .= '<tr><td>' . $sub . '</td></tr>';
			}
			$i++;
		}
		$pdfhtml .= $forpdf . '</tbody></table></body>';
		$dompdf->set_paper('A4', 'landscape');
		
		//load html into PDF object
		$dompdf->load_html($pdfhtml);
		$dompdf->render();
		
		//save the PDF to the FTP folder
		$output = $dompdf->output();
		file_put_contents("sites/default/files/pdf-reports/" . $form_state['values']['form_build_id'] . ".pdf", $output);
		
		//redirect to the new PDF
		$form_state['redirect'] = 'http://new.galobby.com/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.pdf';
		//when user comes back to a Drupal page, let's give them the link
		$message = 'PDF export complete. Copy and paste the following link to share: <a href="http://new.galobby.com/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.pdf" />' . $form_state['values']['form_build_id'] . '</a>';
		drupal_set_message($message);
		//dpm('after PDF exported, form states:');
		//dpm($form);
		//dpm($form_state);
	}
	//csv creation
	elseif ($form_state['values']['export_type'] == 1){
		//dpm('CSV outout expected');
		// output headers so that the file is downloaded rather than displayed
		//if ($form_state['complete form']['pdf_exp_' . $i]['#value'] == '1') {
			header('Content-Type: text/csv; charset=utf-8');
			//header('Content-Disposition: attachment; filename=' . $form_state['values']['form_build_id'] . '.csv');
			//header('Content-Disposition: attachment; filename=test.csv');
		if (is_writable('/home/galobby/public_html/development/sites/default/files/pdf-reports/')) {
			$out = fopen('/home/galobby/public_html/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.csv', 'a+');
			$data = array('Importance', 'Bill', 'Description', 'Summary', 'Sponsor', 'Committees', 'Status', 'Analysis');
			fputcsv($out, $data);
			$a = 0;
			//dpm($form['pass_thru_nids'][$a]['#default_value']);
			//load nodes
			while ($count > $a) {
				if ($form_state['complete form']['pdf_exp_' . $a]['#value'] == '1') {
					$nodeid = $form['pdf_exp_' . $a]['#attributes'][0];
					$cwb = node_load($nodeid);
					//dpm($cwb);
					fputcsv($out, array($cwb->field_importance['und'][0]['value'], $cwb->title, strip_tags($cwb->field_billdescrip['und'][0]['value']), strip_tags($cwb->field_descrip['und'][0]['value']), strip_tags($cwb->field_sponsor['und'][0]['value']), strip_tags($cwb->field_committee['und'][0]['value']), strip_tags($cwb->field_status['und'][0]['value']), strip_tags($cwb->body['und'][0]['value'])));
				}	
				$a++;
			}

			fclose($out);
			header('Content-Disposition: attachment; filename="' . $form_state['values']['form_build_id'] . "'.csv'");
			$msg = 'Excel report <a href="http://new.galobby.com/development/sites/default/files/pdf-reports/' . $form_state['values']['form_build_id'] . '.csv" /> ' . $form_state['values']['form_build_id'] . '</a> created. Click link to download the report or share it by copying and pasting the link.';
			drupal_set_message($msg);
		}
	}
	else {
		dpm('In progress, check back later for this functionality...');
	}
}


function galobby_cw_add_bill_form($form, &$form_state, $argument) {
	global $user;
	$usobj = user_load($user->uid);
	$userid = $user->uid;
	$client = $form_state['build_info']['args'][0];
	
	//make sure user has permission to see Client Watch
	if (user_has_role(10, $usobj) || user_has_role(3, $usobj) || user_has_role(13, $usobj)) {
		$form['description'] = array(
  			'#markup' => '<p>Quickly add a bill to Client Watch Reporting for ' . $client . '.</p>'
		);
 
		$form['type_options'] = array(
  			'#type' => 'value',
  			'#value' => array('HB' => t('HB'),
                    'HR' => t('HR'),
                    'SB' => t('SB'),
                    'SR' => t('SR')
		));

		$form['type'] = array(
  			'#title' => t('Bill Type'),
  			'#type' => 'select',
  			'#description' => "Select the bill type.",
  			'#options' => $form['type_options']['#value'],
  			'#required' => TRUE, //make this field required 
		);  
  
 		$form['billstartnum'] = array(
    		'#type' => 'textfield', //you can find a list of available types in the form api
    		'#title' => 'Enter the bill number.',
    		'#size' => 4,
    		'#maxlength' => 4,
    		'#required' => TRUE, //make this field required 
  		);
  
		$form['analysis'] = array(
    		'#type' => 'textarea', //you can find a list of available types in the form api
    		'#title' => 'Add your analysis for the bill.',
    		'#cols' => 64,
    		'#rows' => 10,
			'#resizable' => TRUE,
    		'#required' => FALSE, 
  		);

		$form['imp_options'] = array(
  			'#type' => 'value',
  			'#value' => array('na' => t('N/A'),
					'Highest' => t('1-Highest'),
                    'High' => t('2-High'),
                    'Medium' => t('3-Medium'),
                    'Low' => t('4-Low'),
					'Lowest' => t('5-Lowest'),
		));

		$form['imp'] = array(
  			'#title' => t('Importance'),
  			'#type' => 'select',
  			'#description' => "Select importance level of bill.",
  			'#options' => $form['imp_options']['#value'],
  			'#required' => FALSE, 
		);

  		$form['submit_button'] = array(
    		'#type' => 'submit',
    		'#value' => t('Create Bill'),
  		);
	}
	
	else {
		//no permissions message
		$html = 'You are not subscribed to Client Watch services.  Please contact Georgia Lobby if you feel this is an error or to upgrade your contract to include this valuable service!';
		
		return $html;
	}
	return $form;
}

function galobby_cw_add_bill_form_submit($form, &$form_state) {
	//create CW bill programmatically
	global $user;
	$billtype = $form_state['values']['type'];
	$billnum = $form_state['values']['billstartnum'];
	$billtitle = $billtype . $billnum;
	//load bill and copy contents
	$queryCW = new EntityFieldQuery();
	$entitiesCW = $queryCW->entityCondition('entity_type', 'node')
				->propertyCondition('type', 'bill_testing')
				->propertyCondition('title', $billtitle)
				->execute();
			if (!empty($entitiesCW['node'])) {
				foreach($entitiesCW['node'] as $ent) {
					$cl_term = taxonomy_get_term_by_name($form_state['build_info']['args'][0], 'clients');
					foreach($cl_term as $cl_t) {
						$cl_tid = $cl_t->tid;
					}
				$bill = node_load($ent->nid);
				$cwbill = new stdClass();
				$cwbill->type = 'client_watch';
				$cwbill->title = $billtype . $billnum;
				$cwbill->language = LANGUAGE_NONE;
				$cwbill->uid = $user->uid;
				$cwbill->field_billdescrip[$cwbill->language][0]['value'] = $bill->field_billdescrip[$bill->language][0]['value'];
				$cwbill->field_billdescrip[$cwbill->language][0]['format'] = 'full_html';
				$cwbill->field_linkfulltext[$cwbill->language][0]['format'] = 'full_html';
				$cwbill->field_linkfulltext[$cwbill->language][0]['value'] = $bill->field_linkfulltext[$bill->language][0]['value'];
				$cwbill->field_descrip[$cwbill->language][0]['value'] = $bill->field_descrip[$bill->language][0]['value'];
				$cwbill->field_descrip[$cwbill->language][0]['format'] = 'full_html';
				$cwbill->field_sponsor[$cwbill->language][0]['value'] = $bill->field_sponsor[$bill->language][0]['value'];
				$cwbill->field_sponsor[$cwbill->language][0]['format'] = 'filtered_html';
				$cwbill->field_status[$cwbill->language][0]['value'] = $bill->field_status[$bill->language][0]['value'];
				$cwbill->field_status[$cwbill->language][0]['format'] = 'full_html';
				$cwbill->field_committee[$cwbill->language][0]['value'] = $bill->field_committee[$bill->language][0]['value'];
				$cwbill->field_committee[$cwbill->language][0]['format'] = 'filtered_html';
				$cwbill->field_bill_type[$cwbill->language][0]['value'] = $billtype;
				$cwbill->field_bill_number[$cwbill->language][0]['value'] = $billnum;
				$cwbill->body[$cwbill->language][0]['value'] = $form_state['values']['analysis'];
				$cwbill->body[$cwbill->language][0]['format'] = 'filtered_html';
				$cwbill->field_clients[$cwbill->language][0]['tid'] = $cl_tid;
				$cwbill->field_importance[$cwbill->language][0]['value'] = $form_state['values']['imp'];
				node_save($cwbill);
				
				$path = '/cw-clients/' . $cl_t->name . '/';
				$form_state['redirect'] = $path;
				$infomessage = 'Bill ' . $cwbill->title . ' has been added.';
  				
				}
			}
			else {
				$infomessage = 'The bill you entered may not exist.  Please check the bill number and try again.';
			}
			drupal_set_message($infomessage,'status');
}
